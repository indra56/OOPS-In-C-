#include <stdio.h>
#include <stdlib.h>
#include <math.h>

// 1. Base structure for Shape (Encapsulation)
typedef struct Shape {
    void (*draw)(struct Shape*);  // Virtual function for drawing the shape
    void (*area)(struct Shape*);  // Virtual function for calculating area
} Shape;

// 2. Circle structure inheriting from Shape
typedef struct {
    Shape base;   // Inherit Shape structure
    double radius;
} Circle;

// 3. Rectangle structure inheriting from Shape
typedef struct {
    Shape base;   // Inherit Shape structure
    double width;
    double height;
} Rectangle;

// 4. Function to draw a Circle
void drawCircle(Shape* shape) {
    Circle* circle = (Circle*)shape; // Typecast to Circle
    printf("Drawing a Circle with radius %.2f\n", circle->radius);
}

// 5. Function to calculate the area of a Circle
void areaCircle(Shape* shape) {
    Circle* circle = (Circle*)shape; // Typecast to Circle
    double area = M_PI * circle->radius * circle->radius;
    printf("Area of Circle: %.2f\n", area);
}

// 6. Function to draw a Rectangle
void drawRectangle(Shape* shape) {
    Rectangle* rectangle = (Rectangle*)shape; // Typecast to Rectangle
    print
